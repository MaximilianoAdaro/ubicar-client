/*
 * Generated by orval v5.4.8 🍺
 * Do not edit manually.
 * Api Documentation
 * Api Documentation
 * OpenAPI spec version: 1.0
 */
import { rest } from "msw";
import faker from "faker";

export const getLoginWithGoogleUsingPOSTMock = () => ({
  email: (() => faker.internet.email())(),
  id: (() => faker.datatype.uuid())(),
  userName: faker.random.word(),
});

export const getLoginUsingPOSTMock = () => ({
  email: (() => faker.internet.email())(),
  id: (() => faker.datatype.uuid())(),
  userName: faker.random.word(),
});

export const getLogOutUsingPOSTMock = () => ({});

export const getGetLoggedUsingGETMock = () => ({
  email: (() => faker.internet.email())(),
  id: (() => faker.datatype.uuid())(),
  userName: faker.random.word(),
});

export const getRegisterUsingPOSTMock = () => ({
  email: (() => faker.internet.email())(),
  id: (() => faker.datatype.uuid())(),
  userName: faker.random.word(),
});

export const getAuthControllerMSW = () => [
  rest.post("*/auth/google-login", (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getLoginWithGoogleUsingPOSTMock())
    );
  }),
  rest.post("*/auth/login", (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getLoginUsingPOSTMock())
    );
  }),
  rest.post("*/auth/logout", (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getLogOutUsingPOSTMock())
    );
  }),
  rest.get("*/auth/me", (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetLoggedUsingGETMock())
    );
  }),
  rest.post("*/auth/register", (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getRegisterUsingPOSTMock())
    );
  }),
  rest.get("*/auth/roles", (req, res, ctx) => {
    return res(ctx.delay(1000), ctx.status(200, "Mocked status"));
  }),
];
